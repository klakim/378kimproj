[
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "model",
    "section": "",
    "text": "from palmerpenguins import penguins\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score"
  },
  {
    "objectID": "model.html#get-data-fixed-37",
    "href": "model.html#get-data-fixed-37",
    "title": "model",
    "section": "Get Data fixed 3/7",
    "text": "Get Data fixed 3/7\n\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "model",
    "section": "Define Model and Fit",
    "text": "Define Model and Fit\n\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\n#context for building the api\nprint(X)\nmodel = LinearRegression().fit(X, y)\n\n     bill_length_mm  species_Chinstrap  species_Gentoo  sex_male\n0              39.1              False           False      True\n1              39.5              False           False     False\n2              40.3              False           False     False\n4              36.7              False           False     False\n5              39.3              False           False      True\n..              ...                ...             ...       ...\n339            55.8               True           False      True\n340            43.5               True           False     False\n341            49.6               True           False      True\n342            50.8               True           False      True\n343            50.2               True           False     False\n\n[333 rows x 4 columns]"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "model",
    "section": "Get some information",
    "text": "Get some information\n\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\nR^2 0.8555368759537614\nIntercept 2169.2697209393996\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]"
  },
  {
    "objectID": "model.html#attempt-at-model-validation",
    "href": "model.html#attempt-at-model-validation",
    "title": "model",
    "section": "Attempt at Model Validation",
    "text": "Attempt at Model Validation\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)  # 80% training and 20% testing\n\nmodel = LinearRegression().fit(X_train, y_train)\n#Asked Chat GPT on what statistics to run on \ny_pred = model.predict(X_test)\nmse = mean_squared_error(y_test, y_pred)\nmae = mean_absolute_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint(f'Mean Squared Error (MSE): {mse}')\nprint(f'Mean Absolute Error (MAE): {mae}')\nprint(f'R-squared (R²): {r2}')\n\nMean Squared Error (MSE): 96276.55445316953\nMean Absolute Error (MAE): 247.01332715906779\nR-squared (R²): 0.838967354416846"
  },
  {
    "objectID": "model.html#chapter-2",
    "href": "model.html#chapter-2",
    "title": "model",
    "section": "Chapter 2",
    "text": "Chapter 2\n\nfrom joblib import dump\ndump(model, 'penguin_model.pkl')\n\n['penguin_model.pkl']\n\n\n\nfrom vetiver import VetiverModel\n\nv = VetiverModel(model=model, model_name='penguin_model', prototype_data=X)\n\n\nfrom pins import board_folder\nfrom vetiver import vetiver_pin_write\n\n# Initialize board folder\nmodel_board = board_folder(\"finalproj/pins-py\", allow_pickle_read=True)\n\n# Write the Vetiver model to the board\nvetiver_pin_write(model_board, v)\n\nModel Cards provide a framework for transparent, responsible reporting. \n Use the vetiver `.qmd` Quarto template as a place to start, \n with vetiver.model_card()\nWriting pin:\nName: 'penguin_model'\nVersion: 20240310T201056Z-41209\n\n\n\nfrom vetiver import VetiverAPI\napp = VetiverAPI(v, check_prototype=True)\n\n\n#vetiver.prepare_docker(model_board, \"penguin_model\")\n\n\n#from vetiver.server import predict, vetiver_endpoint\n#endpoint = vetiver_endpoint(\"http://127.0.0.1:8080/predict\")\n#endpoint\n\n\n # import pandas as pd\n\n# Your existing dictionary\n#new_penguin_dict = {\n    #\"bill_length_mm\": [120],  # Enclosed the values in lists\n    #\"sex_male\": [1],          # Assuming '1' for male based on your previous messages\n   # \"species_Gentoo\": [1],\n    #\"species_Chinstrap\": [0]\n#}\n\n# Convert the dictionary to a DataFrame\n#new_penguin_df = pd.DataFrame(new_penguin_dict)\n\n# Now, convert the first row of the DataFrame to a dictionary\n#record_dict = new_penguin_df.iloc[0].to_dict()\n\n\n#import requests  # Ensure this is installed: pip install requests\n\n# Assuming 'endpoint' is your API endpoint URL\n#response = requests.post(endpoint, json=record_dict)\n\n# Check the response\n#if response.ok:\n#    print(\"Success:\", response.json())\n#else:\n#    print(\"Error:\", response.status_code, response.text)\n\n\n#if(FALSE) {\n # import duckdb\n#from palmerpenguins import penguins\n\n#con = duckdb.connect('my-db.duckdb')\n#df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\n#con.close()\n#}\n\nDocumentation Statement: I used the following resource : https://www.geeksforgeeks.org/how-to-do-train-test-split-using-sklearn-in-python/"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "eda.qmd",
    "section": "",
    "text": "Works as of 3/7"
  },
  {
    "objectID": "eda.html#quarto",
    "href": "eda.html#quarto",
    "title": "eda.qmd",
    "section": "",
    "text": "Works as of 3/7"
  },
  {
    "objectID": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "href": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "title": "eda.qmd",
    "section": "Penguin Size and Mass by Sex and Species",
    "text": "Penguin Size and Mass by Sex and Species\n\n#Needed Packages\ninstall.packages(\"palmerpenguins\")\n\nThe following package(s) will be installed:\n- palmerpenguins [0.1.1]\nThese packages will be installed into \"~/work/378kimproj/378kimproj/renv/library/R-4.2/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing palmerpenguins ...                 OK [linked from cache]\nSuccessfully installed 1 package in 5.2 milliseconds.\n\ninstall.packages(\"dplyr\")\n\nThe following package(s) will be installed:\n- dplyr [1.1.4]\nThese packages will be installed into \"~/work/378kimproj/378kimproj/renv/library/R-4.2/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing dplyr ...                          OK [linked from cache]\nSuccessfully installed 1 package in 3.7 milliseconds.\n\ninstall.packages(\"dbplyr\")\n\nThe following package(s) will be installed:\n- blob   [1.2.4]\n- cpp11  [0.4.7]\n- DBI    [1.2.2]\n- dbplyr [2.4.0]\n- purrr  [1.0.2]\n- tidyr  [1.3.1]\nThese packages will be installed into \"~/work/378kimproj/378kimproj/renv/library/R-4.2/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing blob ...                           OK [linked from cache]\n- Installing DBI ...                            OK [linked from cache]\n- Installing purrr ...                          OK [linked from cache]\n- Installing cpp11 ...                          OK [linked from cache]\n- Installing tidyr ...                          OK [linked from cache]\n- Installing dbplyr ...                         OK [linked from cache]\nSuccessfully installed 6 packages in 16 milliseconds.\n\ninstall.packages(\"ggplot2\")\n\nThe following package(s) will be installed:\n- ggplot2 [3.5.0]\nThese packages will be installed into \"~/work/378kimproj/378kimproj/renv/library/R-4.2/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing ggplot2 ...                        OK [linked from cache]\nSuccessfully installed 1 package in 3.9 milliseconds.\n\ninstall.packages(\"DBI\")\n\nThe following package(s) will be installed:\n- DBI [1.2.2]\nThese packages will be installed into \"~/work/378kimproj/378kimproj/renv/library/R-4.2/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing DBI ...                            OK [linked from cache]\nSuccessfully installed 1 package in 3.5 milliseconds.\n\ninstall.packages(\"duckdb\")\n\nThe following package(s) will be installed:\n- duckdb [0.9.2-1]\nThese packages will be installed into \"~/work/378kimproj/378kimproj/renv/library/R-4.2/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing duckdb ...                         OK [linked from cache]\nSuccessfully installed 1 package in 3.7 milliseconds.\n\ninstall.packages(\"vetiver\")\n\n# Downloading packages -------------------------------------------------------\n- Downloading vetiver from CRAN ...             OK [550.8 Kb in 0.67s]\n- Downloading bundle from CRAN ...              OK [1.4 Mb in 0.68s]\n- Downloading butcher from CRAN ...             OK [269.1 Kb in 0.67s]\n- Downloading lobstr from CRAN ...              OK [129.3 Kb in 0.69s]\n- Downloading crayon from CRAN ...              OK [154.9 Kb in 0.43s]\n- Downloading prettyunits from CRAN ...         OK [151.5 Kb in 0.47s]\n- Downloading cereal from CRAN ...              OK [44.5 Kb in 0.66s]\n- Downloading hardhat from CRAN ...             OK [803.2 Kb in 0.59s]\n- Downloading pins from CRAN ...                OK [653.9 Kb in 0.71s]\n- Downloading httr from CRAN ...                OK [453.8 Kb in 0.61s]\n- Downloading curl from CRAN ...                OK [745.1 Kb in 0.57s]\n- Downloading openssl from CRAN ...             OK [1.2 Mb in 0.56s]\n- Downloading askpass from CRAN ...             OK [21 Kb in 0.61s]\n- Downloading sys from CRAN ...                 OK [38.7 Kb in 0.63s]\n- Downloading whisker from CRAN ...             OK [64.3 Kb in 1.1s]\n- Downloading rapidoc from CRAN ...             OK [253.2 Kb in 0.63s]\n- Downloading readr from CRAN ...               OK [805.1 Kb in 0.58s]\n- Downloading clipr from CRAN ...               OK [48.8 Kb in 0.54s]\n- Downloading hms from CRAN ...                 OK [94.3 Kb in 0.62s]\n- Downloading vroom from CRAN ...               OK [904.7 Kb in 0.62s]\n- Downloading bit64 from CRAN ...               OK [561.4 Kb in 0.58s]\n- Downloading bit from CRAN ...                 OK [1.1 Mb in 0.63s]\n- Downloading tzdb from CRAN ...                OK [624.9 Kb in 0.73s]\n- Downloading progress from CRAN ...            OK [82.6 Kb in 0.63s]\nSuccessfully downloaded 24 packages in 18 seconds.\n\nThe following package(s) will be installed:\n- askpass     [1.2.0]\n- bit         [4.0.5]\n- bit64       [4.0.5]\n- bundle      [0.1.1]\n- butcher     [0.3.3]\n- cereal      [0.1.0]\n- clipr       [0.8.0]\n- crayon      [1.5.2]\n- curl        [5.2.1]\n- hardhat     [1.3.1]\n- hms         [1.1.3]\n- httr        [1.4.7]\n- lobstr      [1.1.2]\n- openssl     [2.1.1]\n- pins        [1.3.0]\n- prettyunits [1.2.0]\n- progress    [1.2.3]\n- rapidoc     [9.3.4]\n- readr       [2.1.5]\n- sys         [3.4.2]\n- tzdb        [0.4.0]\n- vetiver     [0.2.5]\n- vroom       [1.6.5]\n- whisker     [0.4.1]\nThese packages will be installed into \"~/work/378kimproj/378kimproj/renv/library/R-4.2/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing bundle ...                         OK [installed binary and cached in 0.58s]\n- Installing crayon ...                         OK [installed binary and cached in 0.41s]\n- Installing prettyunits ...                    OK [installed binary and cached in 0.4s]\n- Installing lobstr ...                         OK [installed binary and cached in 0.51s]\n- Installing butcher ...                        OK [installed binary and cached in 0.42s]\n- Installing cereal ...                         OK [installed binary and cached in 0.5s]\n- Installing hardhat ...                        OK [installed binary and cached in 0.67s]\n- Installing curl ...                           OK [installed binary and cached in 0.47s]\n- Installing sys ...                            OK [installed binary and cached in 0.4s]\n- Installing askpass ...                        OK [installed binary and cached in 0.4s]\n- Installing openssl ...                        OK [installed binary and cached in 0.5s]\n- Installing httr ...                           OK [installed binary and cached in 0.42s]\n- Installing whisker ...                        OK [installed binary and cached in 0.41s]\n- Installing pins ...                           OK [installed binary and cached in 0.62s]\n- Installing rapidoc ...                        OK [installed binary and cached in 0.42s]\n- Installing clipr ...                          OK [installed binary and cached in 0.41s]\n- Installing hms ...                            OK [installed binary and cached in 0.53s]\n- Installing bit ...                            OK [installed binary and cached in 0.44s]\n- Installing bit64 ...                          OK [installed binary and cached in 0.45s]\n- Installing tzdb ...                           OK [installed binary and cached in 0.46s]\n- Installing progress ...                       OK [installed binary and cached in 0.54s]\n- Installing vroom ...                          OK [installed binary and cached in 0.76s]\n- Installing readr ...                          OK [installed binary and cached in 0.72s]\n- Installing vetiver ...                        OK [installed binary and cached in 0.81s]\nSuccessfully installed 24 packages in 13 seconds.\n\ncon &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\nDBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)\n\n\n#Load packages \nlibrary(palmerpenguins)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dbplyr)\n\n\nAttaching package: 'dbplyr'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    ident, sql\n\nlibrary(ggplot2)\nlibrary(duckdb)\n\nLoading required package: DBI\n\nlibrary(DBI)\nlibrary(vetiver)\nlibrary(pins)\n\n\n#load data \ncon &lt;- DBI::dbConnect(\n  duckdb::duckdb(), \n  dbdir = \"my-db.duckdb\"\n  )\ndf &lt;- dplyr::tbl(con, \"penguins\")\n\n\n#From Chapter 1\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n        ends_with(\"mm\") | ends_with(\"g\"),\n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  dplyr::collect() %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by \"species\". You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\n\n\n\n\n#Given EDA\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "eda.html#penguin-bill-length-by-sex-and-species",
    "href": "eda.html#penguin-bill-length-by-sex-and-species",
    "title": "eda.qmd",
    "section": "Penguin Bill Length by Sex and Species",
    "text": "Penguin Bill Length by Sex and Species\n\n# Boxplot for comparison \ndf%&gt;%\n  #formula \n  ggplot(aes(x=species, y = bill_length_mm, fill = species))+ \n  #creation\n  geom_boxplot() + \n  theme_minimal() +\n  labs(title = \"Comparison of Bill Length by Species \", x = \"Species\", y = \"Bill Length (mm)\")\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n# Boxplot for comparison \ndf%&gt;%\n  #formula \n  ggplot(aes(x=sex, y = bill_length_mm, fill = species))+ \n  #creation\n  geom_boxplot() + \n  theme_minimal() +\n  labs(title = \"Comparison of Bill Length by Sex \", x = \"Sex\", y = \"Bill Length (mm)\")\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "eda.html#penguin-bill-length-by-interaction-of-sex-and-species",
    "href": "eda.html#penguin-bill-length-by-interaction-of-sex-and-species",
    "title": "eda.qmd",
    "section": "Penguin Bill Length by Interaction of Sex and Species",
    "text": "Penguin Bill Length by Interaction of Sex and Species\n\n\ndf %&gt;%\n  ggplot(aes(x = interaction(species, sex), y = bill_length_mm, fill = species)) + \n  geom_boxplot() + \n  theme_minimal() +\n  labs(\n    title = \"Comparison of Bill Length by Sex and Species\",\n    x = \"Species and Sex\",\n    y = \"Bill Length (mm)\",\n    fill = \"Species\"\n  )\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\nDBI::dbDisconnect(con, shutdown = TRUE)"
  }
]